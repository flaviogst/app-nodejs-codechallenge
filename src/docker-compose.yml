version: "3.9"

services:
  postgres:
    image: postgres:15-alpine
    container_name: transactions-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: transactions
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.1
    container_name: kafka-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_LOG4J_ROOT_LOGLEVEL: ERROR
      ZOOKEEPER_LOG4J_ROOT_LOGLEVEL: ERROR
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 10
    logging:
      driver: "none"

  kafka:
    image: confluentinc/cp-kafka:7.5.1
    container_name: kafka-broker
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LOG4J_ROOT_LOGLEVEL: ERROR
      KAFKA_TOOLS_LOG4J_LOGLEVEL: ERROR
      KAFKA_LOG4J_LOGGERS: "kafka.controller=ERROR,kafka.producer.async.DefaultEventHandler=ERROR,state.change.logger=ERROR"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 10s
      timeout: 5s
      retries: 10
    logging:
      driver: "none"

  transactions:
    build:
      context: ./transactions
    container_name: transactions-service
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      LOG_LEVEL: info
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/transactions
      KAFKA_BROKERS: kafka:29092
      KAFKA_CLIENT_ID: transactions-service
      KAFKA_TRANSACTION_TOPIC: transaction.created
      KAFKA_STATUS_TOPIC: transaction.status
      KAFKA_CONSUMER_GROUP_TRANSACTIONS: transactions-group

  antifraud:
    build:
      context: ./antifraud
    container_name: antifraud-service
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      NODE_ENV: development
      LOG_LEVEL: info
      KAFKA_BROKERS: kafka:29092
      KAFKA_CLIENT_ID: antifraud-service
      KAFKA_TRANSACTION_TOPIC: transaction.created
      KAFKA_STATUS_TOPIC: transaction.status
      KAFKA_CONSUMER_GROUP_ANTIFRAUD: antifraud-group

volumes:
  postgres-data:
    driver: local
